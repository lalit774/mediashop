openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /profile:
    get:
      tags:
      - profile-controller
      operationId: listAllFormsOfMetadata_1
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModelObject'
  /profile/visits:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /visits:
    get:
      tags:
      - visit-entity-controller
      description: get-visit
      operationId: getCollectionResource-visit-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelVisit'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelVisit'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - visit-entity-controller
      description: create-visit
      operationId: postCollectionResource-visit-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelVisit'
  /visits/search/findByPetId:
    get:
      tags:
      - visit-search-controller
      operationId: executeSearch-visit-get
      parameters:
      - name: petId
        in: query
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelVisit'
        "404":
          description: Not Found
  /visits/search/findByPetIdIn:
    get:
      tags:
      - visit-search-controller
      operationId: executeSearch-visit-get_1
      parameters:
      - name: petIds
        in: query
        schema:
          type: array
          items:
            type: object
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelVisit'
        "404":
          description: Not Found
  /visits/{id}:
    get:
      tags:
      - visit-entity-controller
      description: get-visit
      operationId: getItemResource-visit-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelVisit'
        "404":
          description: Not Found
    put:
      tags:
      - visit-entity-controller
      description: update-visit
      operationId: putItemResource-visit-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelVisit'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelVisit'
        "204":
          description: No Content
    delete:
      tags:
      - visit-entity-controller
      description: delete-visit
      operationId: deleteItemResource-visit-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - visit-entity-controller
      description: patch-visit
      operationId: patchItemResource-visit-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelVisit'
        "204":
          description: No Content
  /owners/*/pets/{petId}/visits:
    get:
      tags:
      - visit-resource
      operationId: visits
      parameters:
      - name: petId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Visit'
    post:
      tags:
      - visit-resource
      operationId: create
      parameters:
      - name: petId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visit'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Visit'
  /pets/visits:
    get:
      tags:
      - visit-resource
      operationId: visitsMultiGet
      parameters:
      - name: petId
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Visits'
components:
  schemas:
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    RepresentationModelObject:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelVisit:
      type: object
      properties:
        date:
          type: string
          format: date-time
        description:
          maxLength: 8192
          minLength: 0
          type: string
        petId:
          type: integer
          format: int32
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelVisit:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            visits:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelVisit'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    Visit:
      type: object
      properties:
        id:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        description:
          maxLength: 8192
          minLength: 0
          type: string
        petId:
          type: integer
          format: int32
    CollectionModelEntityModelVisit:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            visits:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelVisit'
        _links:
          $ref: '#/components/schemas/Links'
    VisitRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        description:
          maxLength: 8192
          minLength: 0
          type: string
        petId:
          type: integer
          format: int32
    Visits:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Visit'
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
